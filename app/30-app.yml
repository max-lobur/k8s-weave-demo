kind: Service
apiVersion: v1
metadata:
  name: api
  # Set type: NodePort/LoadBalancer for real scenario
  labels:
    role: api
  namespace: net-policy-test
spec:
  selector:
    role: api
  ports:
    - name: api-tcp
      protocol: TCP
      port: 443
      targetPort: 80
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: api-deploy
  namespace: net-policy-test
spec:
  template:
    metadata:
      labels:
        role: api
    spec:
      containers:
      - name: api
        image: lobur/tcp-server:v2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: db
  labels:
    role: db
  namespace: net-policy-test
spec:
  selector:
    role: db
  ports:
    - name: db-tcp
      protocol: TCP
      port: 5432
      targetPort: 80
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: db-deploy
  namespace: net-policy-test
spec:
  template:
    metadata:
      labels:
        role: db
    spec:
      containers:
      - name: db
        image: lobur/tcp-server:v2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: logger
  labels:
    role: logger
  namespace: net-policy-test
spec:
  selector:
    role: logger
  ports:
    - name: log-udp
      protocol: UDP
      port: 514
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: logger-deploy
  namespace: net-policy-test
spec:
  template:
    metadata:
      labels:
        role: logger
    spec:
      containers:
      - name: logger
        image: lobur/udp-server:v2
        imagePullPolicy: IfNotPresent
        # A real UDP logger could be tested in other way:
        # - write some log
        # - verify it appeared in container / volume
        ports:
        - containerPort: 514
